name: peeky-blinders
version: 0.1
synopsis: DSL for high-performance binary data deserialisation
copyright: (c) 2021, Nikita Volkov
license: MIT
license-file: LICENSE
build-type: Simple
cabal-version: >=1.10

source-repository head
  type: git
  location: git://github.com/nikita-volkov/peeky-blinders.git

library
  hs-source-dirs: library
  default-extensions: Arrows, BangPatterns, BlockArguments, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, PatternSynonyms, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeApplications, TypeFamilies, TypeOperators, UnboxedTuples
  default-language: Haskell2010
  exposed-modules:
    PeekyBlinders
  other-modules:
    PeekyBlinders.Prelude
  build-depends:
    base >=4.14 && <5,
    bytestring >=0.10 && <0.12,
    ghc-prim >=0.6.1 && <0.8,
    ptr >=0.16.8.2 && <0.17,
    text ==1.*,
    vector >=0.12 && <0.13

test-suite test
  type: exitcode-stdio-1.0
  hs-source-dirs: test
  main-is: Main.hs
  ghc-options: -O2 -threaded "-with-rtsopts=-N"
  default-extensions: Arrows, BangPatterns, BlockArguments, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, PatternSynonyms, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeApplications, TypeFamilies, TypeOperators, UnboxedTuples
  default-language: Haskell2010
  build-depends:
    cereal >=0.5.8 && <0.6,
    peeky-blinders,
    QuickCheck >=2.8.1 && <3,
    quickcheck-instances >=0.3.11 && <0.4,
    rerebase <2,
    tasty >=1.4.1 && <2,
    tasty-hunit >=0.10.0.3 && <0.11,
    tasty-quickcheck >=0.10.1.2 && <0.11

benchmark bench
  type: exitcode-stdio-1.0
  hs-source-dirs: bench
  main-is: Main.hs
  ghc-options: -O2 -threaded "-with-rtsopts=-N"
  default-extensions: Arrows, BangPatterns, BlockArguments, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, PatternSynonyms, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeApplications, TypeFamilies, TypeOperators, UnboxedTuples
  default-language: Haskell2010
  build-depends:
    cereal >=0.5.8 && <0.6,
    gauge >=0.2.5 && <0.3,
    persist >=0.1.1.5 && <0.2,
    peeky-blinders,
    rerebase >=1.10.0.1 && <2,
    store >=0.7.10 && <0.8,
    tasty-hunit >=0.10.0.3 && <0.11,
    tostring >=0.2.1.1 && <0.3
